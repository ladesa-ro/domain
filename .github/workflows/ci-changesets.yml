name: CI with Changesets - Version PR and Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  ci-changesets:
    name: Changesets CI

    runs-on: ubuntu-latest

    outputs:
      has_changesets: ${{ steps.changeset.outputs.hasChangesets }}

    permissions:
      id-token: write
      contents: write
      pull-requests: write
      issues: read

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76
        with:
          bun-version: "latest"

      - run: bun install --frozen-lockfile

      - id: changeset
        uses: changesets/action@746c25e23caa47dceb6a48ee85b4cbc5a9f5f293
        with:
          version: bun run changeset:version
          setupGitUser: true
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  prebuild-devcontainer:
    uses: ./.github/workflows/prebuild-devcontainer.yml
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    with:
      cache-from: ghcr.io/ladesa-ro/domain/devcontainer

  ci-publish-npm:
    if: needs.ci-changesets.outputs.has_changesets == 'false'

    runs-on: ubuntu-latest
    
    needs: 
    - ci-changesets
    - prebuild-devcontainer

    environment: 
      name: ci-pkg-npm

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Publish into NPM
        uses: devcontainers/ci@8bf61b26e9c3a98f69cb6ce2f88d24ff59b785c6
        with:
          configFile: .devcontainer/ci/devcontainer.json
          cacheFrom: ghcr.io/ladesa-ro/domain/devcontainer
          env: |
            BUN_CONFIG_TOKEN=${{ secrets.REGISTRY_TOKEN }}
          runCmd: |
            bun install --frozen-lockfile
            bun x nx run-many --projects tag:npm-publish --target build
            bun x nx exec --projects tag:npm-publish -- bash -c '(bun publish --dry-run; exit 0;)' 

  ci-publish-nuget:
    if: needs.ci-changesets.outputs.has_changesets == 'false'

    runs-on: ubuntu-latest

    needs: 
    - ci-changesets
    - prebuild-devcontainer
    
    environment: 
      name: ci-pkg-nuget

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Build and Publish into NuGet
        uses: devcontainers/ci@8bf61b26e9c3a98f69cb6ce2f88d24ff59b785c6

        with:
          configFile: .devcontainer/ci/devcontainer.json
          cacheFrom: ghcr.io/ladesa-ro/domain/devcontainer
          env: |
            NUGET_TOKEN=${{ secrets.NUGET_TOKEN }}
            NUGET_SERVER=${{ secrets.NUGET_SERVER }}
          runCmd: |
            bun install --frozen-lockfile;
            
            cd pkgs/integrations/dotnet/ladesa-domain-v4-sln;

            bun run build;

            dotnet build --configuration Release -p:ContinuousIntegrationBuild=true;

            dotnet pack --configuration Release --output ./.nuget;

            pkgs=$(find './.nuget' -name '*.nupkg');

            for pkg in ${pkgs[*]} ;
            do
              dotnet nuget push "${pkg}" --skip-duplicate --api-key "${NUGET_TOKEN}" -s "${NUGET_SERVER}"
            done
