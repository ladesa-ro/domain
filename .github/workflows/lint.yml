name: Lint

on:
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  prebuild-devcontainer:
    name: Enforce Changeset

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - run: git fetch origin ${{ github.event.pull_request.head.sha }}:pr-${{ github.event.pull_request.number }}

      - run: git checkout pr-${{ github.event.pull_request.number }}

      - name: Build and run dev container task
        uses: devcontainers/ci@v0.3
          imageFrom: ghcr.io/ladesa-ro/domain/devcontainer
          cacheFrom: ghcr.io/ladesa-ro/domain/devcontainer
          push: always

  enforce-changeset:
    name: Enforce Changeset

    runs-on: ubuntu-latest

    needs: [prebuild-devcontainer]

    if: github.event_name == 'pull_request' && github.event.pull_request.title != 'Version Packages'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - run: git fetch origin ${{ github.event.pull_request.head.sha }}:pr-${{ github.event.pull_request.number }}

      - run: git checkout pr-${{ github.event.pull_request.number }}

      - name: Build and run dev container task
        uses: devcontainers/ci@v0.3
        with:
          runCmd: |
            bun install;
            bun run changeset:status;

  lint:
    name: Lint
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [prebuild-devcontainer]
    if: (github.event_name == 'pull_request' || github.event_name == 'merge_group') && github.event.pull_request.title != 'Version Packages'
    steps:
      - uses: actions/checkout@v4

      - name: Build and run dev container task
        uses: devcontainers/ci@v0.3
        with:
          runCmd: |
            bun install;
            bun run all:lint:check;
            bun run all:generate;

      - name: Ensure clean git workspace
        run: git diff --name-only --exit-code

  summary:
    name: Summary (lint)
    runs-on: ubuntu-latest
    timeout-minutes: 1
    if: always()
    needs:
      - enforce-changeset
      - lint
    steps:
      - name: Check All
        run: |-
          for status in ${{ join(needs.*.result, ' ') }}
          do
            if [ "$status" != "success" ] && [ "$status" != "skipped" ]
            then
              echo "Some checks failed"
              exit 1
            fi
          done
